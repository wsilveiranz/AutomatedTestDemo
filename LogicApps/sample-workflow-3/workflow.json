{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Initialize_variable": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "targetUrl",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {}
            },
            "Parse_JSON": {
                "type": "ParseJson",
                "inputs": {
                    "content": "@triggerBody()?['contentData']",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "messageId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "payload": {
                                "type": "object",
                                "properties": {
                                    "order": {
                                        "type": "object",
                                        "properties": {
                                            "orderId": {
                                                "type": "string"
                                            },
                                            "orderDate": {
                                                "type": "string"
                                            },
                                            "orderItems": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "itemId": {
                                                            "type": "string"
                                                        },
                                                        "itemName": {
                                                            "type": "string"
                                                        },
                                                        "quantity": {
                                                            "type": "integer"
                                                        },
                                                        "price": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "itemId",
                                                        "itemName",
                                                        "quantity",
                                                        "price"
                                                    ]
                                                }
                                            },
                                            "totalPrice": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "runAfter": {
                    "Initialize_variable": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Condition": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@tolower(body('Parse_JSON')?['status'])",
                                "new"
                            ]
                        }
                    ]
                },
                "actions": {
                    "Set_variable_to_Insert": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "targetUrl",
                            "value": "@parameters('insertTargetUrl')"
                        }
                    }
                },
                "else": {
                    "actions": {
                        "Set_variable_to_Update": {
                            "type": "SetVariable",
                            "inputs": {
                                "name": "targetUrl",
                                "value": "@parameters('updateTargetUrl')"
                            }
                        }
                    }
                },
                "runAfter": {
                    "Parse_JSON": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Call_External_API": {
                "type": "Http",
                "inputs": {
                    "uri": "@variables('targetUrl')",
                    "method": "POST",
                    "headers": {
                        "Content-Type": "application/json"
                    },
                    "body": "@body('Parse_JSON')"
                },
                "runAfter": {
                    "Condition": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Complete_the_message_in_a_queue": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "queueName": "@parameters('queueName')",
                        "lockToken": "@triggerBody()?['lockToken']"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "serviceBus",
                        "operationId": "completeQueueMessageV2",
                        "serviceProviderId": "/serviceProviders/serviceBus"
                    }
                },
                "runAfter": {
                    "Call_External_API": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Abandon_the_message_in_a_queue": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "queueName": "@parameters('queueName')",
                        "lockToken": "@triggerBody()?['lockToken']"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "serviceBus",
                        "operationId": "abandonQueueMessageV2",
                        "serviceProviderId": "/serviceProviders/serviceBus"
                    }
                },
                "runAfter": {
                    "Call_External_API": [
                        "TIMEDOUT",
                        "SKIPPED",
                        "FAILED"
                    ]
                }
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "When_messages_are_available_in_a_queue_(peek-lock)": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "queueName": "@parameters('queueName')"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "serviceBus",
                        "operationId": "peekLockQueueMessagesV2",
                        "serviceProviderId": "/serviceProviders/serviceBus"
                    }
                },
                "splitOn": "@triggerOutputs()?['body']"
            }
        }
    },
    "kind": "Stateful"
}